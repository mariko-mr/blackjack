@startuml blackjack

BlackjackGame --> GameParticipant
BlackjackGame --> Deck
BlackjackGame ----> Rule
BlackjackGame --> Message
BlackjackGame --> HandJudger

Message --> Validator

GameParticipant <|-- Player
GameParticipant <|-- Dealer
Player <|-- PlayerManual
Player <|-- PlayerAuto


PlayerManual -- Deck
PlayerAuto -- Deck
Dealer -- Deck
Deck *-- Card

GameParticipant -- RuleAce
Player -- RulePlayer
Dealer -- RuleDealer

Rule <|.. RuleAce
Rule <|.. RuleDealer
Rule <|.. RulePlayer

skinparam classAttributeIconSize 0

class BlackjackGame {
    -const DRAW_TWO
    -const DRAW_ONE
    +__construct(Deck, Player, Dealer, HandJudger)
    +startGame(): void
    -playerTurn(): void
    -dealerTurn(): void
    -showDown(): void
}

abstract GameParticipant {
    -array $playerCards
    -int $playerTotalScore
    -int $$aceReductionCount
    +__construct()
    +drawCards(): array
    +getTotalScore(): int
    -updateTotalScore(): int
    -hasAce(): int
    -reduceScoreWithAce(): int
}

class Player {
}

class PlayerManual {
    -array $playerCards
    -int $playerTotalScore
    -int $$aceReductionCount
    +__construct()
    +drawCards(): array
    +getTotalScore(): int
    -updateTotalScore(): int
    -hasAce(): int
    -reduceScoreWithAce(): int
}

class PlayerAuto {
    -array $playerCards
    -int $playerTotalScore
    -int $$aceReductionCount
    +__construct()
    +drawCards(): array
    +getTotalScore(): int
    -updateTotalScore(): int
    -hasAce(): int
    -reduceScoreWithAce(): int
}

class Dealer {
    -array $dealerCards
    -int $dealerTotalScore
    -int $$aceReductionCount
    +__construct()
    +drawCards(): array
    +getTotalScore(): int
    -updateTotalScore(): int
    -hasAce(): int
    -reduceScoreWithAce(): int
}

class Deck {
    -const SUITS
    -const CARD_NUM_AND_SCORES
    -array $cards
    +__construct()
    +drawCards(): array
}

class Card {
    +__construct($suit, $number, $score)
    +getSuit(): string
    +getNumber(): string
    +getScore(): int
}

interface Rule {
}

class RuleAce{
}

class HandJudger {
    +determineWinner(): string
}

class Message {
    -showStartMsg(): void
    -showPlayerMsg(): void
    -showDealerMsg(): void
    -showDealerDrawnMsg(): void

}

class Validator {
    -validateInput(): string
}


@enduml
